<!DOCTYPE HTML>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <title>Ohjelmoitavilta logiikoilta ker√§tyn tiedon visualisointi</title>

        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <style type="text/css">
${demo.css}
        </style>
        <script type="text/javascript">

// where CSV file is stored
var URL = "https://dl.dropboxusercontent.com/u/3685401/S7Logger/workfile.txt"

// array to store days
var dayObjects = [];

// data object
var DayObject = {
    init: function (day) {
        this.day = day;
    },
    describe: function () {
        var description = this.day;
        return description;
    }
};

// this might be from stackoverflow
function getFileFromServer(url, doneCallback) {
    var xhr;
    xhr = new XMLHttpRequest();
    xhr.onreadystatechange = handleStateChange;
    xhr.open("GET", url, true);
    xhr.send();

    // I don't know what this does
    function handleStateChange() {
        if (xhr.readyState === 4) {
            doneCallback(xhr.status == 200 ? xhr.responseText : null);
        }
    }
}

// calling file getting function
getFileFromServer(URL, function(text) {

    // if file is not found
    if (text === null) { console.log("404 ") }

    // if file is found, call function
    else { textToArray(text); }
    }
);

// function for modifying the CSV file to javascript arrays
function textToArray(text) {

    // initializing variables and arrays
    var vacuumCount = 0;
    var datearray = [];
    var vacuumarray = [];
    var armarray = [];
    var magarray = [];



    // split text into lines by \n (line break)
    var line = text.split('\n');

    // loop every line
    for (var i = 0; i < line.length; i++)  {

        //console.log(line[i],line[i].length);

        // ignore empty lines if there is any
        if (line[i].length != 1) {

            //split every line by comma
            var linesplit = line[i].split(",");

            // find values
            // example line: "vacuumOn,I,2017-01-23,16:07:01"
            var output = linesplit[0];
            var type = linesplit[1];
            var day = linesplit[2];
            var time = linesplit[3];
            var thisDay = Object.create(DayObject);

            //console.log(i,output, type, day, time);


            // pushing only unique dates to the datearray
            // TODO: make this its own function

            //console.log(day + checkUnique(day));

            // first day
            // we can't know the counts yet so they are not pushed
            if (dayObjects.length == 0) {
                thisDay.init(day);
                dayObjects.push(thisDay);

                //console.log(thisDay.day);

                // remaining, unique dates and counts
                //
            } else if (checkUnique(day)) { // if index i.e. day not found
                thisDay.init(day);
                dayObjects.push(thisDay);

                //console.log("new day found in CSV ");

                // push counters to respective arrays
                vacuumarray.push(vacuumCount);
            }

            // counters
            if (output == "vacuumOn") { vacuumCount++; }

        }
        //console.log(dayObjects.indexOf(thisDay.day));
        //console.log(thisDay.day);

    }

    console.log(dayObjects);

    // print all of the dates
    //console.log(dayObjects);

    dayObjects.forEach(function (x) {
        console.log(x.describe())
    });

    // call the visualizing function
    visualize(datearray, vacuumarray, magarray, armarray);
}

// horrible unique checking function
function checkUnique(daytocheck) {
    for (var i=0; i < dayObjects.length; i++) {

        //console.log(dayObjects[i].day);
        //console.log(daytocheck);
        //console.log(dayObjects[i].day === daytocheck);

        // if day is found in dayObjects, return false
        if (dayObjects[i].day == daytocheck) {
            console.log("Multiple entry found " + daytocheck);
            return false;

        // if not found, return true
        } else {
            //console.log("Unique day found" + daytocheck);
    }
}
    return true;
}

// visualizing function
function visualize(datearray, vacuumarray, magarray, armarray) {

    // using Highcharts line-basic example here
    Highcharts.chart('container', {
        title: {
            text: 'Kumulatiivinen laskuri Distribution Stationin outputeille',
            x: -20 //center
        },
        subtitle: {
            text: 'https://github.com/mangelma/S7Logger',
            x: -20
        },
        xAxis: {

            // array of days here
            categories: datearray
        },
        yAxis: {

            // only integers
            allowDecimals: false,

            title: {
                text: 'Highs'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle',
            borderWidth: 0
        },

        // output arrays are here:
        series: [{
            name: 'Vacuum',
            data: vacuumarray
        }, {
            name: 'Mag',
            data: magarray
        }, {
            name: 'Arm',
            data: armarray
        }]
    });
}
        </script>
    </head>
    <body>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

<br>

<center>
<!-- Contact me at: -->
<IMG SRC="http://www.students.tut.fi/~angelma/angelma.png">

<!-- Some links here -->

<a href="http://snap7.sourceforge.net/"><H3>Snap7-kirjasto</H3></a>

<a href="http://simplyautomationized.blogspot.fi/search/label/snap7">
<H3>Simply Automationized -blogi</H3>
</a>

<a href="https://dl.dropboxusercontent.com/u/3685401/S7Logger/workfile.txt">
<H3>CSV-tietokanta</H3>
</a>

</center>
</body>
</html>
